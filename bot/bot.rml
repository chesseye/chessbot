open Types
open Types_bot


let init () =
  let usage = Sys.argv.(0)^" options" in
  let args =
    Arg.align
      (Config.options @ Config_bot.options)
  in
  Arg.parse args (fun _ -> ()) usage

let process main text mask position reset =
  let conf = Config_bot.get () in
  print_endline "The ChessBot is running";
  loop
    let intent = run Dialog.get_intent conf text in
    begin match intent with
    (* | Intent_setup_position -> *)
    (*     await mask(Some m) in *)
    (*     let pos_init = run Dialog.position_of_mask conf text m in *)
    (*     emit position (Undo, pos_init); *)
    (*     emit reset pos_init *)
    | Intent_setup_position ->
        let pos_init = Fen.position_of_fen "4k3/8/8/8/8/8/8/4K3 w - - 0 42" in
        run Dialog.mask_of_position conf text mask pos_init.ar;
        emit position (Undo, pos_init);
        emit reset pos_init;
        pause
    | Intent_undo ->
        print_endline "Undo not implemented"; (* XXX TODO XXX *)
        pause
    | Intent_resign ->
        print_endline "Resign not implemented"; (* XXX TODO XXX *)
        pause
    end
  end

let () =
  init ();
  begin
    run Controller_core.main
    ||
    run main
      Controller_core.text
      Controller_core.mask
      Controller_core.position
      Controller_core.reset
  end

